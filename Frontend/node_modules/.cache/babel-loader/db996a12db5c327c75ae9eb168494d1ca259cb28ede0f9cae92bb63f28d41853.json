{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhir\\\\Desktop\\\\Log Analyzer\\\\Frontend\\\\src\\\\components\\\\LogTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogTable = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    // Fetch log data from backend API\n    fetch(\"http://localhost:5000/api/logs\") // Update with your actual API route\n    .then(response => response.json()).then(data => setLogs(data)).catch(error => console.error(\"Error fetching logs:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Unauthorized Access Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300 shadow-lg rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 border\",\n              children: \"IP Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 border\",\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2 border\",\n              children: \"Flagged\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: logs.length > 0 ? logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-center border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 border\",\n              children: log.ip_address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 border\",\n              children: log.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-4 py-2 border\",\n              children: log.flagged ? \"✅ Yes\" : \"❌ No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"3\",\n              className: \"text-center py-4\",\n              children: \"No logs found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(LogTable, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = LogTable;\nexport default LogTable;\nvar _c;\n$RefreshReg$(_c, \"LogTable\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","LogTable","_s","logs","setLogs","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","index","ip_address","timestamp","flagged","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/abhir/Desktop/Log Analyzer/Frontend/src/components/LogTable.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst LogTable = () => {\r\n  const [logs, setLogs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch log data from backend API\r\n    fetch(\"http://localhost:5000/api/logs\") // Update with your actual API route\r\n      .then((response) => response.json())\r\n      .then((data) => setLogs(data))\r\n      .catch((error) => console.error(\"Error fetching logs:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Unauthorized Access Logs</h2>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full bg-white border border-gray-300 shadow-lg rounded-lg\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"px-4 py-2 border\">IP Address</th>\r\n              <th className=\"px-4 py-2 border\">Timestamp</th>\r\n              <th className=\"px-4 py-2 border\">Flagged</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logs.length > 0 ? (\r\n              logs.map((log, index) => (\r\n                <tr key={index} className=\"text-center border-b\">\r\n                  <td className=\"px-4 py-2 border\">{log.ip_address}</td>\r\n                  <td className=\"px-4 py-2 border\">{log.timestamp}</td>\r\n                  <td className=\"px-4 py-2 border\">\r\n                    {log.flagged ? \"✅ Yes\" : \"❌ No\"}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"3\" className=\"text-center py-4\">\r\n                  No logs found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}