{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhir\\\\Desktop\\\\Log Analyzer\\\\Frontend\\\\src\\\\components\\\\LogAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogAnalyzer = () => {\n  _s();\n  const [unauthorizedLogs, setUnauthorizedLogs] = useState([]);\n  const [sqlLogs, setSqlLogs] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    fetchUnauthorizedLogs();\n    fetchSQLLogs();\n  }, []);\n  const fetchUnauthorizedLogs = () => {\n    fetch(\"http://localhost:5000/api/unauthorized-access\").then(response => response.json()).then(data => {\n      console.log(\"Fetched Unauthorized Access Logs:\", data);\n      setUnauthorizedLogs(data); // Update state\n      window.unauthorizedLogs = data; // Debugging\n    }).catch(error => {\n      console.error(\"Failed to fetch unauthorized access logs:\", error);\n      setError(\"Failed to load unauthorized logs.\");\n    });\n  };\n  const fetchSQLLogs = () => {\n    fetch(\"http://localhost:5000/api/sql-logs\").then(response => response.json()).then(data => {\n      console.log(\"Fetched SQL Injection Logs:\", data);\n      setSqlLogs(data); // Update state\n      window.sqlLogs = data; // Debugging\n    }).catch(error => {\n      console.error(\"Failed to fetch SQL injection logs:\", error);\n      setError(\"Failed to load SQL logs.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Unauthorized Access Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Source IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Access Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HTTP Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: unauthorizedLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.source_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.destination_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.access_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.user_agent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.http_status_code_response ? log.http_status_code_response : \"Unknown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SQL Injection Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Source IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SQL Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HTTP Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sqlLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.source_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.destination_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.sql_query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.user_agent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.http_status_code_response ? log.http_status_code_response : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(LogAnalyzer, \"0v9haa8UERZaxt5UOQPv2GKdyH0=\");\n_c = LogAnalyzer;\nexport default LogAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"LogAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogAnalyzer","_s","unauthorizedLogs","setUnauthorizedLogs","sqlLogs","setSqlLogs","error","setError","fetchUnauthorizedLogs","fetchSQLLogs","fetch","then","response","json","data","console","log","window","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","border","map","index","source_ip","destination_ip","access_type","user_agent","http_status_code_response","sql_query","_c","$RefreshReg$"],"sources":["C:/Users/abhir/Desktop/Log Analyzer/Frontend/src/components/LogAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst LogAnalyzer = () => {\r\n    const [unauthorizedLogs, setUnauthorizedLogs] = useState([]);\r\n    const [sqlLogs, setSqlLogs] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchUnauthorizedLogs();\r\n        fetchSQLLogs();\r\n    }, []);\r\n\r\n    const fetchUnauthorizedLogs = () => {\r\n        fetch(\"http://localhost:5000/api/unauthorized-access\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Fetched Unauthorized Access Logs:\", data);\r\n                setUnauthorizedLogs(data); // Update state\r\n                window.unauthorizedLogs = data; // Debugging\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to fetch unauthorized access logs:\", error);\r\n                setError(\"Failed to load unauthorized logs.\");\r\n            });\r\n    };\r\n\r\n    const fetchSQLLogs = () => {\r\n        fetch(\"http://localhost:5000/api/sql-logs\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"Fetched SQL Injection Logs:\", data);\r\n                setSqlLogs(data); // Update state\r\n                window.sqlLogs = data; // Debugging\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Failed to fetch SQL injection logs:\", error);\r\n                setError(\"Failed to load SQL logs.\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Unauthorized Access Logs</h2>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Source IP</th>\r\n                        <th>Destination IP</th>\r\n                        <th>Access Type</th>\r\n                        <th>User Agent</th>\r\n                        <th>HTTP Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {unauthorizedLogs.map((log, index) => (\r\n                        <tr key={index}>\r\n                            <td>{log.source_ip}</td>\r\n                            <td>{log.destination_ip}</td>\r\n                            <td>{log.access_type}</td>\r\n                            <td>{log.user_agent}</td>\r\n                            <td>{log.http_status_code_response ? log.http_status_code_response : \"Unknown\"}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <h2>SQL Injection Logs</h2>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Source IP</th>\r\n                        <th>Destination IP</th>\r\n                        <th>SQL Query</th>\r\n                        <th>User Agent</th>\r\n                        <th>HTTP Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sqlLogs.map((log, index) => (\r\n                        <tr key={index}>\r\n                            <td>{log.source_ip}</td>\r\n                            <td>{log.destination_ip}</td>\r\n                            <td>{log.sql_query}</td>\r\n                            <td>{log.user_agent}</td>\r\n                            <td>{log.http_status_code_response ? log.http_status_code_response : \"N/A\"}</td>\r\n\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogAnalyzer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}