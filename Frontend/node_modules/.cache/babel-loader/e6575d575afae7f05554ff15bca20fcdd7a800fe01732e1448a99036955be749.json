{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhir\\\\Desktop\\\\Log Analyzer\\\\Frontend\\\\src\\\\components\\\\LogAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogAnalyzer = () => {\n  _s();\n  const [unauthorizedLogs, setUnauthorizedLogs] = useState([]);\n  const [sqlInjectionLogs, setSqlInjectionLogs] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  // Fetch Unauthorized Access Logs\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/logs/unauthorized-access\").then(res => res.json()).then(data => setUnauthorizedLogs(data)).catch(err => setError(\"Failed to fetch unauthorized access logs\"));\n  }, []);\n\n  // Fetch SQL Injection Logs\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/logs/sql-injection\") // âœ… Adjust API endpoint accordingly\n    .then(res => res.json()).then(data => setSqlInjectionLogs(data)).catch(err => setError(\"Failed to fetch SQL injection logs\"));\n  }, []);\n  const addUnauthorizedLog = async () => {\n    const logData = {\n      source_ip: \"192.168.1.100\",\n      destination_ip: \"10.0.0.1\",\n      access_type: \"Unauthorized\",\n      user_agent: \"Mozilla/5.0\",\n      http_status_code_response: 403\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/logs/unauthorized-access\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(logData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setUnauthorizedLogs([...unauthorizedLogs, logData]);\n      } else {\n        setError(result.error);\n      }\n    } catch (error) {\n      setError(\"Failed to add unauthorized access log\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Unauthorized Access Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUnauthorizedLog,\n      children: \"Add Sample Unauthorized Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Source IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Access Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"HTTP Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: unauthorizedLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.source_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.destination_ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.access_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.user_agent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.http_status_code_response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SQL Injection Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"IP Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sqlInjectionLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.ip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: \"red\",\n              fontFamily: \"monospace\"\n            },\n            children: log.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(log.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: log.status === \"Blocked\" ? \"red\" : \"green\",\n              color: \"white\"\n            },\n            children: log.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(LogAnalyzer, \"/xZwsmBHkhxvupaYkoIWleTebak=\");\n_c = LogAnalyzer;\nexport default LogAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"LogAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogAnalyzer","_s","unauthorizedLogs","setUnauthorizedLogs","sqlInjectionLogs","setSqlInjectionLogs","error","setError","fetch","then","res","json","data","catch","err","addUnauthorizedLog","logData","source_ip","destination_ip","access_type","user_agent","http_status_code_response","response","method","headers","body","JSON","stringify","result","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","border","map","log","index","id","ip","fontFamily","query","Date","timestamp","toLocaleString","backgroundColor","status","_c","$RefreshReg$"],"sources":["C:/Users/abhir/Desktop/Log Analyzer/Frontend/src/components/LogAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst LogAnalyzer = () => {\r\n    const [unauthorizedLogs, setUnauthorizedLogs] = useState([]);\r\n    const [sqlInjectionLogs, setSqlInjectionLogs] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Fetch Unauthorized Access Logs\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/logs/unauthorized-access\")\r\n            .then((res) => res.json())\r\n            .then((data) => setUnauthorizedLogs(data))\r\n            .catch((err) => setError(\"Failed to fetch unauthorized access logs\"));\r\n    }, []);\r\n\r\n    // Fetch SQL Injection Logs\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:5000/api/logs/sql-injection\")  // âœ… Adjust API endpoint accordingly\r\n            .then((res) => res.json())\r\n            .then((data) => setSqlInjectionLogs(data))\r\n            .catch((err) => setError(\"Failed to fetch SQL injection logs\"));\r\n    }, []);\r\n\r\n    const addUnauthorizedLog = async () => {\r\n        const logData = {\r\n            source_ip: \"192.168.1.100\",\r\n            destination_ip: \"10.0.0.1\",\r\n            access_type: \"Unauthorized\",\r\n            user_agent: \"Mozilla/5.0\",\r\n            http_status_code_response: 403\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/api/logs/unauthorized-access\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(logData)\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (response.ok) {\r\n                setUnauthorizedLogs([...unauthorizedLogs, logData]);\r\n            } else {\r\n                setError(result.error);\r\n            }\r\n        } catch (error) {\r\n            setError(\"Failed to add unauthorized access log\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Unauthorized Access Logs</h2>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <button onClick={addUnauthorizedLog}>Add Sample Unauthorized Log</button>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Source IP</th>\r\n                        <th>Destination IP</th>\r\n                        <th>Access Type</th>\r\n                        <th>User Agent</th>\r\n                        <th>HTTP Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {unauthorizedLogs.map((log, index) => (\r\n                        <tr key={index}>\r\n                            <td>{log.source_ip}</td>\r\n                            <td>{log.destination_ip}</td>\r\n                            <td>{log.access_type}</td>\r\n                            <td>{log.user_agent}</td>\r\n                            <td>{log.http_status_code_response}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* âœ… SQL Injection Logs Table */}\r\n            <h2>SQL Injection Logs</h2>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>IP Address</th>\r\n                        <th>Query</th>\r\n                        <th>Timestamp</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {sqlInjectionLogs.map((log, index) => (\r\n                        <tr key={index}>\r\n                            <td>{log.id}</td>\r\n                            <td>{log.ip}</td>\r\n                            <td style={{ color: \"red\", fontFamily: \"monospace\" }}>{log.query}</td>\r\n                            <td>{new Date(log.timestamp).toLocaleString()}</td>\r\n                            <td style={{ backgroundColor: log.status === \"Blocked\" ? \"red\" : \"green\", color: \"white\" }}>\r\n                                {log.status}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogAnalyzer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}